name: artifact
on: push
env:
  CARGO_UNSTABLE_SPARSE_REGISTRY: "true"
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  RUST_TOOLCHAIN: "nightly-2025-01-07"
  UNSAFE_PYO3_BUILD_FREE_THREADED: "1"
  UNSAFE_PYO3_SKIP_VERSION_CHECK: "1"
  UV_LINK_MODE: "copy"
jobs:

  sdist:
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    strategy:
      fail-fast: false
    env:
      RUST_TOOLCHAIN: "1.82" # MSRV
    steps:

    - uses: actions/setup-python@v5
      with:
        python-version: "3.13"

    - name: rustup stable
      run: |
        curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain "${RUST_TOOLCHAIN}" -y
        rustup default "${RUST_TOOLCHAIN}"

    - uses: actions/checkout@v4

    - name: Cargo.toml and pyproject.toml version must match
      run: ./script/check-version

    - run: python3 -m pip install --user --upgrade pip "maturin>=1,<2" wheel

    - name: Vendor dependencies
      run: |
        maturin build
        cargo fetch
        mkdir .cargo
        cp ci/sdist.toml .cargo/config.toml
        cargo vendor include/cargo --versioned-dirs

    - run: maturin sdist --out=dist

    - run: python3 -m pip install --user dist/orjson*.tar.gz
      env:
        CARGO_NET_OFFLINE: "true"

    - run: python3 -m pip install --user -r test/requirements.txt -r integration/requirements.txt mypy

    - run: pytest -v test
      env:
        PYTHONMALLOC: "debug"

    - run: ./integration/run thread
    - run: ./integration/run http
    - run: ./integration/run init
    - run: ./integration/run typestubs

    - name: Store sdist
      if: "startsWith(github.ref, 'refs/tags/')"
      uses: actions/upload-artifact@v4
      with:
        name: orjson_sdist
        path: dist
        overwrite: true
        retention-days: 1

  windows:
    runs-on: windows-2022
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        python: [
          { version: '3.13' },
          { version: '3.12' },
          { version: '3.11' },
          { version: '3.10' },
          { version: '3.9' },
          { version: '3.8' },
        ]
        platform: [
          { arch: "x64", target: "x86_64-pc-windows-msvc" },
          { arch: "x64", target: "x86_64-win7-windows-msvc"},
          { arch: "x86", target: "i686-pc-windows-msvc" },
        ]
    env:
      CFLAGS: "-Os"
      LDFLAGS: "-Wl,--as-needed"
      RUSTFLAGS: "-C lto=fat -Z mir-opt-level=4 -D warnings"
    steps:

    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: "${{ matrix.python.version }}"
        architecture: "${{ matrix.platform.arch }}"

    - uses: dtolnay/rust-toolchain@master
      with:
        toolchain: "${{ env.RUST_TOOLCHAIN }}"
        targets: "${{ matrix.platform.target }}"
        components: "rust-src"

    - name: Build environment
      run: |
        cargo fetch --target "${{ matrix.platform.target }}" &

        python.exe -m pip install --upgrade pip "maturin>=1,<2" wheel
        python.exe -m pip install -r test\requirements.txt -r integration\requirements.txt

        mkdir .cargo
        cp ci\config.toml .cargo\config.toml

    - name: maturin
      run: |
        maturin.exe build --release --strip --features=unstable-simd,yyjson --target="${{ matrix.platform.target }}"
        python.exe -m pip install orjson --no-index --find-links target\wheels

    - run: python.exe -m pytest -s -rxX -v test
      env:
        PYTHONMALLOC: "debug"

    - name: Store wheels
      if: "startsWith(github.ref, 'refs/tags/')"
      uses: actions/upload-artifact@v4
      with:
        name: orjson_windows_${{ matrix.platform.arch }}_${{ matrix.python.version }}
        path: target\wheels
        overwrite: true
        retention-days: 1

  pypi:
    name: PyPI
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [
      sdist,
      windows,
    ]
    environment:
      name: pypi
      url: https://pypi.org/p/orjson
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: dist/
          pattern: orjson_*

      - run: ls -1 dist/

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          attestations: true
          packages-dir: dist
          skip-existing: true
          verbose: true
